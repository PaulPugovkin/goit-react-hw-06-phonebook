{"version":3,"sources":["Components/Filter/Filter.module.css","Components/NewContact/NewContact.module.css","Components/UserPhonebook/UserPhoneBook.module.css","Components/Section/Section.module.css","redux/actions.js","redux/reducer.js","redux/store.js","Components/Section/Section.jsx","Components/AddForm/AddForm.jsx","Components/NewContact/NewContact.jsx","Components/UserPhonebook/UserPhoneBook.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/AddForm/AddForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactReducer","devTools","process","persistor","persistStore","Section","children","className","styles","wrapper","AddForm","dispatch","useDispatch","useSelector","useState","setName","setNumber","onInputChange","value","target","checkEnteredName","normalizedName","toLowerCase","some","onSubmit","e","preventDefault","alert","onChange","input","placeholder","type","pattern","title","required","button","NewContact","item","onClick","UserPhoneBook","normalizedFilter","includes","getUserContacts","list","map","Filter","App","length","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.dcb2c618.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__2q9mJ\",\"input\":\"Filter_input__1346q\",\"label-text\":\"Filter_label-text__3wNqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"NewContact_item__2JHBp\",\"button\":\"NewContact_button__31KtK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserPhoneBook_wrapper__3Hxf9\",\"list\":\"UserPhoneBook_list__2ohbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Section_wrapper__3kJX7\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('phonebook/add', (name, number) => ({\r\n    payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n    },\r\n}));\r\nexport const deleteContact = createAction('phonebook/delete');\r\nexport const changeFilter = createAction('phonebook/filter');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { addContact, changeFilter, deleteContact } from './actions';\r\n\r\nconst items = createReducer([], {\r\n    [addContact]: (state, { payload }) => [...state, payload],\r\n    [deleteContact]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactReducer from './reducer';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, contactReducer),\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import PropTypes from 'prop-types';\r\n\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ children }) => {\r\n    return <section className={styles.wrapper}>{children}</section>;\r\n};\r\n\r\nSection.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from '../../redux/actions';\r\nimport { useState } from 'react';\r\nimport styles from './AddForm.module.css';\r\n\r\nfunction AddForm() {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(state => state.contacts.items);\r\n\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const onInputChange = value => {\r\n        if (value.target.name === 'name') setName(value.target.value);\r\n        if (value.target.name === 'number') setNumber(value.target.value);\r\n    };\r\n\r\n    const onUserSubmit = e => {\r\n        e.preventDefault();\r\n        if (checkEnteredName(name))\r\n            return alert(`${name} is already in your contacts`);\r\n        dispatch(addContact(name, number));\r\n\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    const checkEnteredName = name => {\r\n        const normalizedName = name.toLowerCase();\r\n        return contacts.some(\r\n            ({ name }) => name.toLowerCase() === normalizedName,\r\n        );\r\n    };\r\n\r\n    return (\r\n        <form className={styles['form-wrapper']} onSubmit={onUserSubmit}>\r\n            <label>\r\n                <span className={styles['label-text']}>First name:</span>\r\n                <input\r\n                    onChange={onInputChange}\r\n                    className={styles.input}\r\n                    placeholder=\"Ivanov Ivan\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n            </label>\r\n            <label>\r\n                <span className={styles['label-text']}>Phone number:</span>\r\n                <input\r\n                    className={styles.input}\r\n                    placeholder=\"+7-999-999-99-99\"\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    onChange={onInputChange}\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className={styles.button}>\r\n                Add contact\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nAddForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onInputChange: PropTypes.func,\r\n    onUserSubmit: PropTypes.func,\r\n};\r\n\r\nexport default AddForm;\r\n","import PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/actions';\r\nimport styles from './NewContact.module.css';\r\n\r\nconst NewContact = ({ name, number, id }) => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <li className={styles.item}>\r\n            {name}: {number}{' '}\r\n            <button\r\n                className={styles.button}\r\n                type=\"button\"\r\n                onClick={() => dispatch(deleteContact(id))}\r\n            >\r\n                Delete\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nNewContact.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n    onDelete: PropTypes.func,\r\n};\r\n\r\nexport default NewContact;\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport NewContact from '../NewContact';\r\nimport styles from './UserPhoneBook.module.css';\r\n\r\nconst UserPhoneBook = () => {\r\n    const getUserContacts = (items, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n\r\n        return items.filter(item =>\r\n            item.name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    };\r\n\r\n    const { items, filter } = useSelector(state => state.contacts);\r\n    const contacts = getUserContacts(items, filter);\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <h2>Your contacts</h2>\r\n            <ul className={styles.list}>\r\n                {contacts.map(({ id, name, number }) => (\r\n                    <NewContact key={id} name={name} number={number} id={id} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nUserPhoneBook.propTypes = {\r\n    contact: PropTypes.arrayOf(PropTypes.object),\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onDelete: PropTypes.func,\r\n};\r\n\r\nexport default UserPhoneBook;\r\n","import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeFilter } from '../../redux/actions';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n    const value = useSelector(state => state.contacts.filter);\r\n    const dispatch = useDispatch();\r\n\r\n    const onFilterChange = e => dispatch(changeFilter(e.target.value));\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <label>\r\n                <span className={styles['label-text']}>Find contact:</span>\r\n                <input\r\n                    placeholder=\"Search contact\"\r\n                    className={styles.input}\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={onFilterChange}\r\n                />\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { useSelector } from 'react-redux';\n\nimport Section from './Components/Section';\nimport AddForm from './Components/AddForm';\nimport UserPhoneBook from './Components/UserPhonebook';\nimport Filter from './Components/Filter';\n\nfunction App() {\n    const { items } = useSelector(state => state.contacts);\n\n    return (\n        <Section>\n            <AddForm />\n\n            {items.length > 0 ? (\n                <>\n                    <Filter />\n                    <UserPhoneBook />\n                </>\n            ) : (\n                <h2>There is no contacts</h2>\n            )}\n        </Section>\n    );\n}\n\nexport default App;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store.js';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <StrictMode>\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-wrapper\":\"AddForm_form-wrapper__wTsXS\",\"input\":\"AddForm_input__1F7vJ\",\"label-text\":\"AddForm_label-text__2rztX\",\"button\":\"AddForm_button__3nPP_\"};"],"sourceRoot":""}